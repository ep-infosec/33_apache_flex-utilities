<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<!--<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical">	-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:popup="popup.*" 
			   minWidth="955" minHeight="600" >
			<!--   creationComplete="startRotation()"  viewSourceURL="srcview/index.html"--> 
	<fx:Script>
		<![CDATA[
			import com.adobe.linguistics.spelling.SpellUI;	
			/*//------------------------
			//thread variable
			private var thread:PseudoThread;
			//this is a thread function added
			private function launchThread():void
			{
			thread = new PseudoThread(systemManager, enableFeature);
			thread.addEventListener("threadComplete", threadCompleteHandler);
			}
			//a do nothing fucntion
			private function threadCompleteHandler(event:Event):void
			{
			}
			//--------------------------*/
			private function enableFeature():void {
				/*	var str1:String="C:/p4_garuda1890_ugoyal-xp/esg/users/ravi/squiggly/main/ASDocExamples/com/adobe/linguistics/spelling/Examples/Flex/SquigglyUIExample/";
				var str2:String="AdobeSpellingConfig.xml";
				//result.text=str1+ta.text;
				SpellUI.spellingConfigURL =str1+str2;*/
				SpellUI.enableSpelling(textArea, "pt_PT");
			}
			private function disableFeature() :void {
				SpellUI.disableSpelling(textArea);
				
			}
			
			
			//--------------------------------
		/*	private function startRotation():void //add this above   	
			{
			addEventListener("enterFrame", enterFrameHandler);
			}
			
			private function enterFrameHandler(event:Event):void
			{
			//trace("enterFrame");
			rbutton.rotation += 14;	
			}
			//---------------------------*/
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<mx:TextArea id="textArea" width="20%" height="20%" fontSize="30" text="Spell cheecking in TextArea "/>
	<mx:Button id="tt1" label="disable Feature" click="disableFeature()" /> 
	<mx:Button id="tt2" label="enable Feature" click="enableFeature()" /> 
<!--	<mx:Button id="rbutton" label="Rotating Button"/> -->
</s:Application>