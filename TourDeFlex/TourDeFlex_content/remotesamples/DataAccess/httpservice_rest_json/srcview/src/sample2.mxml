<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" 
	backgroundGradientColors="[0x000000,0x323232]">
   
    <mx:Script>
    	<![CDATA[
    		import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.http.HTTPService;
			import com.adobe.serialization.json.JSON;
			
			private var googleImageService:HTTPService;
			[Bindable]
			private var dp:ArrayCollection;
			
    		private function onResult(event:ResultEvent):void
    		{
    			// The following line will decode/deserialize the JSON response. It is 
    			// dependent on the as3corelib.swc library which can be obtained at: 
    			// http://code.google.com/p/as3corelib/
    			var json:Object = JSON.decode(event.result as String);
    			
    			// the following syntax depends on the specific result format being 
    			// returned from the REST API. In this case it needs to look like the 
    			// following. The Yahoo example shows how it's result set is returned 
    			// and needs to be parsed.
                dp = new ArrayCollection(json.responseData.results as Array);
				
			}
			private function onFault(event:FaultEvent):void
    		{
    			trace("Fault: " + event.fault.faultString);
    		}
    		private function search():void
    		{
    			// See website for further information regarding Google's REST services: 
    			// http://code.google.com/apis/ajaxsearch/documentation/ 
    			
    			googleImageService = new HTTPService();
				googleImageService.url = "http://ajax.googleapis.com/ajax/services/search/images";
				googleImageService.request.v = "1.0"
				googleImageService.request.q = searchString.text;
				googleImageService.request.start=1;
				googleImageService.request.rsz="large"
				googleImageService.resultFormat = "text";
				googleImageService.addEventListener(ResultEvent.RESULT, onResult);	
				googleImageService.send();
    		}
    	]]>
    </mx:Script>
    
    <mx:Panel width="95%" height="100%" title="Search Google Images" color="#000000">
        <mx:HBox width="100%">
            <mx:TextInput width="200" id="searchString" enter="search()"/>
            <mx:Button label="Search" click="search()"/>
        </mx:HBox>
        
		<mx:DataGrid  id="dg" width="100%" height="100%" minColumnWidth="80" 
			variableRowHeight="true" doubleClickEnabled="true" 
			doubleClick="navigateToURL(new URLRequest(dg.selectedItem.url))" dataProvider="{dp}">
			<mx:columns>
				<mx:DataGridColumn headerText="Image" width="120">
					<mx:itemRenderer>
						<mx:Component>
							<mx:Image source="{data.tbUrl}" width="100" height="100" horizontalAlign="center" verticalAlign="middle"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="titleNoFormatting" headerText="Title" width="150"/>
				<mx:DataGridColumn dataField="url" headerText="URL" width="150"/>
				<mx:DataGridColumn dataField="width" headerText="Width" width="100"/>
				<mx:DataGridColumn dataField="height" headerText="Height" width="100"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:Panel>
    
</mx:Application>