<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" backgroundGradientColors="[0x000000,0x323232]">
	<mx:Script>
		<![CDATA[
			
			import twitter.api.*;
			import twitter.api.data.*;
			import twitter.api.events.*;
			import flash.utils.Dictionary;
			
			[Bindable]
			private var userArray:Array;
			
			[Bindable]
			private var statusDict:Dictionary = new Dictionary();
			
			private function onLogin():void
			{
				var twit:Twitter = new Twitter();
				twit.setAuthenticationCredentials(userid.text,pw.text);
				twit.addEventListener(TwitterEvent.ON_FRIENDS_RESULT,onFriendsLoad);
				twit.loadFriends(userid.text,true);
			}
			
			private function onFriendsLoad(evt:TwitterEvent):void
			{
				userArray = (evt.data as Array).pop();//Why do I have to do pop() here when the debug looks like they are direct children?
				for each(var item in userArray) {
					var status:TwitterStatus = item.status;
					statusDict[item.id]=status.text;
				}
			}
			
			private function getStatus(item:Object,col:DataGridColumn):String
			{
				return statusDict[item.id];
  			
			}
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:Form defaultButton="{btn}" color="#FFFFFF">
		<mx:FormHeading label="Twitter Login Data"/>
            <mx:FormItem label="Userid:">
                <mx:TextInput id="userid" width="200" color="#000000"/>
            </mx:FormItem>
            <mx:FormItem label="Password:">
                <mx:TextInput id="pw" width="200" displayAsPassword="true" color="#000000"/>
            </mx:FormItem>
			<mx:FormItem>
				<mx:Button id="btn" label="Login" click="onLogin()"/>
			</mx:FormItem>
		</mx:Form>
		<mx:DataGrid  id="dgData" dataProvider="{userArray}" width="100%" height="100%" minColumnWidth="80" variableRowHeight="true" 
			x="100" doubleClickEnabled="true" 
			doubleClick="navigateToURL(new URLRequest(dgData.selectedItem.profileImageUrl))" selectionColor="#6496C3">
			<mx:columns>
				<mx:DataGridColumn headerText="Image" width="120">
					<mx:itemRenderer>
						<mx:Component>
							<mx:Image  source="{data.profileImageUrl}" horizontalAlign="center" verticalAlign="middle"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="name" headerText="Name" width="100"/>
				<mx:DataGridColumn dataField="screen_name" headerText="Screen Name" width="100"/>
				<mx:DataGridColumn dataField="location" headerText="Location"  width="100"/>
				<mx:DataGridColumn dataField="description" headerText="Description"  width="100"/>
				<mx:DataGridColumn labelFunction="getStatus" headerText="Status" width="100"/>
			</mx:columns>
		</mx:DataGrid>	
	</mx:VBox>
</mx:Application>
